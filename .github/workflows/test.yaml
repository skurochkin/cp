name: Run on Pull Request Approval and Code Changes

on:
  pull_request_review:
    types: [submitted]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get base commit SHA
        id: base-commit
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "PR_NUMBER: $PR_NUMBER"
          API_RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER")
          BASE_SHA=$(echo "$API_RESPONSE" | jq -r '.base.sha')
          echo "BASE_SHA: $BASE_SHA"
          echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV

      - name: Check if PR is approved and code has changed
        id: check-pr
        run: |
          REVIEW_STATE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER/reviews?per_page=100" \
              | jq -r 'map(select(.state == "APPROVED"))) | length')
          echo "REVIEW_STATE: $REVIEW_STATE"
          # Print commit references for debugging
          echo "BASE_SHA: $BASE_SHA"
          echo "github.sha: ${{ github.sha }}"
          # Check if there are code changes since last approval
          if [ "$REVIEW_STATE" -gt 0 ]; then
              DIFF_FILES=$(git diff --name-only $BASE_SHA ${{ github.sha }}) || true
              echo "DIFF_FILES: $DIFF_FILES"
              if [ -n "$DIFF_FILES" ]; then
                  echo "run_job=true" >> $GITHUB_ENV
              else
                  echo "run_job=false" >> $GITHUB_ENV
              fi
          else
              echo "run_job=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Job if conditions met
        if: env.run_job == 'true'
        run: |
          echo 'test request'